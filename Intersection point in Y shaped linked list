Python -->
class Solution:
    def intersectPoint(self, head1, head2):
        # Helper function to count nodes in a list
        def get_count(head):
            count = 0
            while head:
                count += 1
                head = head.next
            return count
        c1 = get_count(head1)
        c2 = get_count(head2)
        if c1 > c2:
            diff = c1 - c2
            longer = head1
            shorter = head2
        else:
            diff = c2 - c1
            longer = head2
            shorter = head1
        for _ in range(diff):
            longer = longer.next
        while longer and shorter:
            if longer == shorter:
                return longer
            longer = longer.next
            shorter = shorter.next
        return None 



c-->
struct Node {
    int data;
    struct Node* next;
};
int getCount(struct Node* head) {
    int count = 0;
    while (head != NULL) {
        count++;
        head = head->next;
    }
    return count;
}
struct Node* intersectPoint(struct Node* head1, struct Node* head2) {
    int c1 = getCount(head1);
    int c2 = getCount(head2);
    int diff;
    struct Node* longer;
    struct Node* shorter;
    if (c1 > c2) {
        diff = c1 - c2;
        longer = head1;
        shorter = head2;
    } else {
        diff = c2 - c1;
        longer = head2;
        shorter = head1;
    }
    for (int i = 0; i < diff; i++)
        longer = longer->next;
    while (longer != NULL && shorter != NULL) {
        if (longer == shorter)
            return longer;
        longer = longer->next;
        shorter = shorter->next;
    }
    return NULL;  
}
